{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\MODEL\\\\SmartCart\\\\frontend\\\\src\\\\components\\\\CameraFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { toast } from 'react-hot-toast';\nimport useCartStore from '../stores/cartStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://192.168.74.207:5000';\nconst CameraFeed = ({\n  cartId\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [lastDetection, setLastDetection] = useState(0);\n  const socketRef = useRef(null);\n  const imageRef = useRef(null);\n  const addItem = useCartStore(state => state.addItem);\n  useEffect(() => {\n    // Connect to WebSocket server\n    socketRef.current = io(API_URL, {\n      transports: ['websocket'],\n      upgrade: false,\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n      reconnectionDelayMax: 5000,\n      timeout: 60000,\n      path: '/socket.io',\n      query: {\n        cart_id: cartId\n      }\n    });\n\n    // Handle connection events\n    socketRef.current.on('connect', () => {\n      console.log('Connected to server');\n      setIsConnected(true);\n      toast.success('Connected to camera feed');\n    });\n    socketRef.current.on('connect_error', error => {\n      console.error('Connection error:', error);\n      toast.error(`Connection error: ${error.message}`);\n    });\n    socketRef.current.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setIsConnected(false);\n      toast.error('Camera feed disconnected');\n    });\n    socketRef.current.on('connection_success', data => {\n      console.log('Connection success:', data);\n    });\n\n    // Handle incoming frames\n    socketRef.current.on('esp32_frame', data => {\n      console.log('Received frame');\n      if (imageRef.current && data.image) {\n        imageRef.current.src = `data:image/jpeg;base64,${data.image}`;\n      }\n    });\n\n    // Handle product detections\n    socketRef.current.on('detection_result', data => {\n      console.log('Detection result:', data);\n      if (data.cart_id === cartId) {\n        setLastDetection(data);\n\n        // Add detected product to cart\n        const product = {\n          id: data.class,\n          name: data.class,\n          price: 0,\n          confidence: data.confidence\n        };\n        addItem(product);\n        toast.success(`Detected: ${product.name}`);\n      }\n    });\n    socketRef.current.on('error', error => {\n      console.error('Server error:', error);\n      toast.error(`Server error: ${error.message}`);\n    });\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, [cartId, addItem]);\n\n  // --- Fetch latest image from backend every 1 second ---\n  useEffect(() => {\n    let lastImageUrl = null;\n    const fetchImage = () => {\n      fetch(`${API_URL}/latest_image?_t=${Date.now()}`).then(res => {\n        if (!res.ok) throw new Error('No image');\n        return res.blob();\n      }).then(blob => {\n        if (imageRef.current) {\n          // Revoke previous object URL to avoid memory leak\n          if (lastImageUrl) URL.revokeObjectURL(lastImageUrl);\n          lastImageUrl = URL.createObjectURL(blob);\n          imageRef.current.src = lastImageUrl;\n        }\n      }).catch(() => {\n        if (imageRef.current) imageRef.current.src = '';\n      });\n    };\n    fetchImage();\n    const interval = setInterval(fetchImage, 500); // 0.5 second for faster updates\n    return () => {\n      clearInterval(interval);\n      if (lastImageUrl) URL.revokeObjectURL(lastImageUrl);\n    };\n  }, []);\n\n  // --- Fetch latest prediction from backend every 1 second ---\n  useEffect(() => {\n    const fetchPrediction = () => {\n      fetch(`${API_URL}/latest_prediction`).then(res => res.json()).then(data => {\n        console.log('[CameraFeed] /latest_prediction response:', data); // Debug log\n        if (data && typeof data.confidence !== 'undefined' && data.product_name) {\n          setLastDetection(data);\n        }\n      }).catch(() => {});\n    };\n    fetchPrediction();\n    const interval = setInterval(fetchPrediction, 1000); // 1 second\n    return () => clearInterval(interval);\n  }, [cartId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded-lg shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Camera Feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-3 h-3 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-600\",\n          children: isConnected ? 'Connected' : 'Disconnected'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative aspect-video bg-gray-100 rounded-lg overflow-hidden mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        ref: imageRef,\n        alt: \"Camera feed\",\n        className: \"w-full h-full object-cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), !isConnected && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center bg-gray-900 bg-opacity-50 text-white\",\n        children: \"Connecting to camera...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-3 bg-blue-50 rounded-lg mb-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-medium mb-1\",\n        children: \"Last Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-gray-600\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Product: \", lastDetection.product_name || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Confidence: \", typeof lastDetection.confidence === 'number' && !isNaN(lastDetection.confidence) ? (lastDetection.confidence * 100).toFixed(1) + '%' : 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(CameraFeed, \"q2c+bx2Py7uCvW1wUyV9MoK7poY=\", false, function () {\n  return [useCartStore];\n});\n_c = CameraFeed;\nexport default CameraFeed;\nvar _c;\n$RefreshReg$(_c, \"CameraFeed\");","map":{"version":3,"names":["React","useEffect","useState","useRef","io","toast","useCartStore","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","CameraFeed","cartId","_s","isConnected","setIsConnected","lastDetection","setLastDetection","socketRef","imageRef","addItem","state","current","transports","upgrade","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","timeout","path","query","cart_id","on","console","log","success","error","message","data","image","src","product","id","class","name","price","confidence","disconnect","lastImageUrl","fetchImage","fetch","Date","now","then","res","ok","Error","blob","URL","revokeObjectURL","createObjectURL","catch","interval","setInterval","clearInterval","fetchPrediction","json","product_name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","alt","isNaN","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/akash/Desktop/MODEL/SmartCart/frontend/src/components/CameraFeed.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { toast } from 'react-hot-toast';\nimport useCartStore from '../stores/cartStore';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://192.168.74.207:5000';\n\nconst CameraFeed = ({ cartId }) => {\n  const [isConnected, setIsConnected] = useState(false);\n  const [lastDetection, setLastDetection] = useState(0);\n  const socketRef = useRef(null);\n  const imageRef = useRef(null);\n  const addItem = useCartStore(state => state.addItem);\n\n  useEffect(() => {\n    // Connect to WebSocket server\n    socketRef.current = io(API_URL, {\n      transports: ['websocket'],\n      upgrade: false,\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n      reconnectionDelayMax: 5000,\n      timeout: 60000,\n      path: '/socket.io',\n      query: { cart_id: cartId }\n    });\n\n    // Handle connection events\n    socketRef.current.on('connect', () => {\n      console.log('Connected to server');\n      setIsConnected(true);\n      toast.success('Connected to camera feed');\n    });\n\n    socketRef.current.on('connect_error', (error) => {\n      console.error('Connection error:', error);\n      toast.error(`Connection error: ${error.message}`);\n    });\n\n    socketRef.current.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setIsConnected(false);\n      toast.error('Camera feed disconnected');\n    });\n\n    socketRef.current.on('connection_success', (data) => {\n      console.log('Connection success:', data);\n    });\n\n    // Handle incoming frames\n    socketRef.current.on('esp32_frame', (data) => {\n      console.log('Received frame');\n      if (imageRef.current && data.image) {\n        imageRef.current.src = `data:image/jpeg;base64,${data.image}`;\n      }\n    });\n\n    // Handle product detections\n    socketRef.current.on('detection_result', (data) => {\n      console.log('Detection result:', data);\n      if (data.cart_id === cartId) {\n        setLastDetection(data);\n\n        // Add detected product to cart\n        const product = {\n          id: data.class,\n          name: data.class,\n          price: 0,\n          confidence: data.confidence\n        };\n\n        addItem(product);\n        toast.success(`Detected: ${product.name}`);\n      }\n    });\n\n    socketRef.current.on('error', (error) => {\n      console.error('Server error:', error);\n      toast.error(`Server error: ${error.message}`);\n    });\n\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, [cartId, addItem]);\n\n  // --- Fetch latest image from backend every 1 second ---\n  useEffect(() => {\n    let lastImageUrl = null;\n    const fetchImage = () => {\n      fetch(`${API_URL}/latest_image?_t=${Date.now()}`)\n        .then(res => {\n          if (!res.ok) throw new Error('No image');\n          return res.blob();\n        })\n        .then(blob => {\n          if (imageRef.current) {\n            // Revoke previous object URL to avoid memory leak\n            if (lastImageUrl) URL.revokeObjectURL(lastImageUrl);\n            lastImageUrl = URL.createObjectURL(blob);\n            imageRef.current.src = lastImageUrl;\n          }\n        })\n        .catch(() => {\n          if (imageRef.current) imageRef.current.src = '';\n        });\n    };\n    fetchImage();\n    const interval = setInterval(fetchImage, 500); // 0.5 second for faster updates\n    return () => {\n      clearInterval(interval);\n      if (lastImageUrl) URL.revokeObjectURL(lastImageUrl);\n    };\n  }, []);\n\n  // --- Fetch latest prediction from backend every 1 second ---\n  useEffect(() => {\n    const fetchPrediction = () => {\n      fetch(`${API_URL}/latest_prediction`)\n        .then(res => res.json())\n        .then(data => {\n          console.log('[CameraFeed] /latest_prediction response:', data); // Debug log\n          if (data && typeof data.confidence !== 'undefined' && data.product_name) {\n            setLastDetection(data);\n          }\n        })\n        .catch(() => { });\n    };\n    fetchPrediction();\n    const interval = setInterval(fetchPrediction, 1000); // 1 second\n    return () => clearInterval(interval);\n  }, [cartId,]);\n\n  return (\n    <div className=\"bg-white p-4 rounded-lg shadow\">\n      <div className=\"mb-4\">\n        <h2 className=\"text-xl font-semibold mb-2\">Camera Feed</h2>\n        <div className=\"flex items-center space-x-2\">\n          <div\n            className={`w-3 h-3 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'\n              }`}\n          />\n          <span className=\"text-sm text-gray-600\">\n            {isConnected ? 'Connected' : 'Disconnected'}\n          </span>\n        </div>\n      </div>\n\n      <div className=\"relative aspect-video bg-gray-100 rounded-lg overflow-hidden mb-4\">\n        <img\n          ref={imageRef}\n          alt=\"Camera feed\"\n          className=\"w-full h-full object-cover\"\n        />\n        {!isConnected && (\n          <div className=\"absolute inset-0 flex items-center justify-center bg-gray-900 bg-opacity-50 text-white\">\n            Connecting to camera...\n          </div>\n        )}\n      </div>\n      <div className=\"p-3 bg-blue-50 rounded-lg mb-10\">\n        <h3 className=\"font-medium mb-1\">Last Prediction</h3>\n        <div className=\"text-sm text-gray-600\">\n          <p>Product: {lastDetection.product_name || 'N/A'}</p>\n          <p>Confidence: {typeof lastDetection.confidence === 'number' && !isNaN(lastDetection.confidence)\n            ? (lastDetection.confidence * 100).toFixed(1) + '%'\n            : 'N/A'}</p>\n        </div>\n      </div>\n\n    </div>\n  );\n};\n\nexport default CameraFeed;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}