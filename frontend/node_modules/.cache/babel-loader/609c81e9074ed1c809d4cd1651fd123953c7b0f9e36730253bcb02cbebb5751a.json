{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\MODEL\\\\SmartCart\\\\frontend\\\\src\\\\components\\\\CameraFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { toast } from 'react-hot-toast';\nimport useCartStore from '../stores/cartStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://192.168.74.207:5000';\nconst CameraFeed = ({\n  cartId\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [lastDetection, setLastDetection] = useState(null);\n  const [lastAddedProduct, setLastAddedProduct] = useState({\n    id: null,\n    confidence: 0\n  });\n  const [useWebcam, setUseWebcam] = useState(false);\n  const socketRef = useRef(null);\n  const imageRef = useRef(null);\n  const videoRef = useRef(null);\n  const addItem = useCartStore(state => state.addItem);\n\n  // Webcam stream logic\n  useEffect(() => {\n    let stream;\n    if (useWebcam && videoRef.current) {\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(s => {\n        stream = s;\n        videoRef.current.srcObject = stream;\n      }).catch(err => {\n        toast.error('Webcam access denied or not available');\n      });\n    }\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [useWebcam]);\n\n  // --- Webcam prediction logic ---\n  useEffect(() => {\n    if (!useWebcam) return;\n    let stopped = false;\n    let lastPredictTime = 0;\n    const lastFrameHashes = [];\n    // Simple average color hash function\n    function getFrameHash(ctx, width, height) {\n      const imgData = ctx.getImageData(0, 0, width, height).data;\n      let r = 0,\n        g = 0,\n        b = 0;\n      for (let i = 0; i < imgData.length; i += 4) {\n        r += imgData[i];\n        g += imgData[i + 1];\n        b += imgData[i + 2];\n      }\n      const n = imgData.length / 4;\n      return `${Math.round(r / n)}-${Math.round(g / n)}-${Math.round(b / n)}`;\n    }\n    // Live video display (no lag)\n    const displayFrame = () => {\n      if (stopped || !videoRef.current) return;\n      // Just keep the video playing, no need to draw to canvas for display\n      requestAnimationFrame(displayFrame);\n    };\n    // Prediction throttled\n    const predictFrame = async () => {\n      if (stopped || !videoRef.current) return;\n      const now = Date.now();\n      if (now - lastPredictTime < 400) {\n        setTimeout(predictFrame, 100); // check again soon\n        return;\n      }\n      lastPredictTime = now;\n      const video = videoRef.current;\n      if (video.readyState < 2) {\n        setTimeout(predictFrame, 100);\n        return;\n      }\n      const canvas = document.createElement('canvas');\n      canvas.width = video.videoWidth || 224;\n      canvas.height = video.videoHeight || 224;\n      const ctx = canvas.getContext('2d');\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n      const frameHash = getFrameHash(ctx, canvas.width, canvas.height);\n      if (lastFrameHashes.includes(frameHash)) {\n        setTimeout(predictFrame, 100);\n        return;\n      }\n      lastFrameHashes.push(frameHash);\n      if (lastFrameHashes.length > 3) lastFrameHashes.shift();\n      const dataUrl = canvas.toDataURL('image/jpeg');\n      const base64 = dataUrl.split(',')[1];\n      try {\n        // --- OpenAI API integration placeholder ---\n        // For security, call OpenAI API from backend, not frontend.\n        // Here, we just send to /predict_product as before.\n        const res = await fetch(`${API_URL}/predict_product`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            cart_id: cartId,\n            image_base64: base64,\n            use_openai: true\n          }) // pass flag to backend\n        });\n        const data = await res.json();\n        if (data && typeof data.confidence !== 'undefined' && data.product_name) {\n          setLastDetection(data);\n          if (data.product_name !== 'Unknown or Not Recognized' && typeof data.confidence === 'number' && data.confidence >= 0.85) {\n            if (lastAddedProduct.id !== data.product_id || lastAddedProduct.confidence < 0.85) {\n              const price = Math.floor(Math.random() * 100) + 1;\n              addItem({\n                id: data.product_id,\n                name: data.product_name,\n                price,\n                confidence: data.confidence\n              });\n              setLastAddedProduct({\n                id: data.product_id,\n                confidence: data.confidence\n              });\n              toast.success(`Added to cart: ${data.product_name} (₹${price})`);\n            }\n          } else {\n            if (lastAddedProduct.id === data.product_id && data.confidence < 0.85) {\n              setLastAddedProduct({\n                id: null,\n                confidence: 0\n              });\n            }\n          }\n        }\n      } catch (e) {\n        // ignore\n      }\n      setTimeout(predictFrame, 100); // keep predicting\n    };\n    requestAnimationFrame(displayFrame);\n    setTimeout(predictFrame, 0);\n    return () => {\n      stopped = true;\n    };\n  }, [useWebcam, cartId, addItem, lastAddedProduct]);\n\n  // --- ESP32 polling logic ---\n  useEffect(() => {\n    if (useWebcam) return;\n    let lastImageUrl = null;\n    let lastConnected = false;\n    const fetchImage = () => {\n      fetch(`${API_URL}/latest_image?_t=${Date.now()}`).then(res => {\n        if (!res.ok) throw new Error('No image');\n        if (!lastConnected) {\n          setIsConnected(true);\n          lastConnected = true;\n        }\n        return res.blob();\n      }).then(blob => {\n        if (imageRef.current) {\n          if (lastImageUrl) URL.revokeObjectURL(lastImageUrl);\n          lastImageUrl = URL.createObjectURL(blob);\n          imageRef.current.src = lastImageUrl;\n        }\n      }).catch(() => {\n        if (imageRef.current) imageRef.current.src = '';\n        if (lastConnected) {\n          setIsConnected(false);\n          lastConnected = false;\n        }\n      });\n    };\n    fetchImage();\n    const interval = setInterval(fetchImage, 200);\n    return () => {\n      clearInterval(interval);\n      if (lastImageUrl) URL.revokeObjectURL(lastImageUrl);\n    };\n  }, [useWebcam]);\n  useEffect(() => {\n    if (useWebcam) return;\n    const fetchPrediction = () => {\n      fetch(`${API_URL}/latest_prediction`).then(res => res.json()).then(data => {\n        if (data && typeof data.confidence !== 'undefined' && data.product_name) {\n          setLastDetection(data);\n          if (data.product_name !== 'Unknown or Not Recognized' && typeof data.confidence === 'number' && data.confidence >= 0.85) {\n            if (lastAddedProduct.id !== data.product_id || lastAddedProduct.confidence < 0.85) {\n              const price = Math.floor(Math.random() * 100) + 1;\n              addItem({\n                id: data.product_id,\n                name: data.product_name,\n                price,\n                confidence: data.confidence\n              });\n              setLastAddedProduct({\n                id: data.product_id,\n                confidence: data.confidence\n              });\n              toast.success(`Added to cart: ${data.product_name} (₹${price})`);\n            }\n          } else {\n            if (lastAddedProduct.id === data.product_id && data.confidence < 0.85) {\n              setLastAddedProduct({\n                id: null,\n                confidence: 0\n              });\n            }\n          }\n        }\n      }).catch(() => {});\n    };\n    fetchPrediction();\n    const interval = setInterval(fetchPrediction, 1000);\n    return () => clearInterval(interval);\n  }, [cartId, addItem, lastAddedProduct, useWebcam]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded-lg shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Camera Feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2 mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-3 h-3 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-600\",\n          children: isConnected ? 'Connected' : 'Disconnected'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `px-3 py-1 rounded mr-2 ${!useWebcam ? 'bg-blue-500 text-white' : 'bg-gray-200'}`,\n          onClick: () => setUseWebcam(false),\n          children: \"ESP32 Camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `px-3 py-1 rounded ${useWebcam ? 'bg-blue-500 text-white' : 'bg-gray-200'}`,\n          onClick: () => setUseWebcam(true),\n          children: \"Webcam / Mobile Camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), lastDetection && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-3 bg-blue-50 rounded-lg \",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-medium mb-1\",\n        children: \"Last Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-gray-600\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Product: \", lastDetection.product_name || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Confidence: \", typeof lastDetection.confidence === 'number' && !isNaN(lastDetection.confidence) ? (lastDetection.confidence * 100).toFixed(1) + '%' : 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative aspect-video mx-auto bg-gray-100 rounded-lg overflow-hidden mt-4 w-full max-w-2xl\",\n      children: [!useWebcam ? /*#__PURE__*/_jsxDEV(\"img\", {\n        ref: imageRef,\n        alt: \"Camera feed\",\n        className: \"w-full h-full object-cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        playsInline: true,\n        className: \"w-full h-full object-cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), !isConnected && !useWebcam && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center bg-gray-900 bg-opacity-50 text-white\",\n        children: \"Connecting to camera...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s(CameraFeed, \"BBxiGIBLcxkjmgR0o19dzR/Sfxs=\", false, function () {\n  return [useCartStore];\n});\n_c = CameraFeed;\nexport default CameraFeed;\nvar _c;\n$RefreshReg$(_c, \"CameraFeed\");","map":{"version":3,"names":["React","useEffect","useState","useRef","io","toast","useCartStore","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","CameraFeed","cartId","_s","isConnected","setIsConnected","lastDetection","setLastDetection","lastAddedProduct","setLastAddedProduct","id","confidence","useWebcam","setUseWebcam","socketRef","imageRef","videoRef","addItem","state","stream","current","navigator","mediaDevices","getUserMedia","video","then","s","srcObject","catch","err","error","getTracks","forEach","track","stop","stopped","lastPredictTime","lastFrameHashes","getFrameHash","ctx","width","height","imgData","getImageData","data","r","g","b","i","length","n","Math","round","displayFrame","requestAnimationFrame","predictFrame","now","Date","setTimeout","readyState","canvas","document","createElement","videoWidth","videoHeight","getContext","drawImage","frameHash","includes","push","shift","dataUrl","toDataURL","base64","split","res","fetch","method","headers","body","JSON","stringify","cart_id","image_base64","use_openai","json","product_name","product_id","price","floor","random","name","success","e","lastImageUrl","lastConnected","fetchImage","ok","Error","blob","URL","revokeObjectURL","createObjectURL","src","interval","setInterval","clearInterval","fetchPrediction","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isNaN","toFixed","ref","alt","autoPlay","playsInline","_c","$RefreshReg$"],"sources":["C:/Users/akash/Desktop/MODEL/SmartCart/frontend/src/components/CameraFeed.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { toast } from 'react-hot-toast';\nimport useCartStore from '../stores/cartStore';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://192.168.74.207:5000';\n\nconst CameraFeed = ({ cartId }) => {\n  const [isConnected, setIsConnected] = useState(false);\n  const [lastDetection, setLastDetection] = useState(null);\n  const [lastAddedProduct, setLastAddedProduct] = useState({ id: null, confidence: 0 });\n  const [useWebcam, setUseWebcam] = useState(false);\n  const socketRef = useRef(null);\n  const imageRef = useRef(null);\n  const videoRef = useRef(null);\n  const addItem = useCartStore(state => state.addItem);\n\n  // Webcam stream logic\n  useEffect(() => {\n    let stream;\n    if (useWebcam && videoRef.current) {\n      navigator.mediaDevices.getUserMedia({ video: true })\n        .then(s => {\n          stream = s;\n          videoRef.current.srcObject = stream;\n        })\n        .catch(err => {\n          toast.error('Webcam access denied or not available');\n        });\n    }\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [useWebcam]);\n\n  // --- Webcam prediction logic ---\n  useEffect(() => {\n    if (!useWebcam) return;\n    let stopped = false;\n    let lastPredictTime = 0;\n    const lastFrameHashes = [];\n    // Simple average color hash function\n    function getFrameHash(ctx, width, height) {\n      const imgData = ctx.getImageData(0, 0, width, height).data;\n      let r = 0, g = 0, b = 0;\n      for (let i = 0; i < imgData.length; i += 4) {\n        r += imgData[i];\n        g += imgData[i + 1];\n        b += imgData[i + 2];\n      }\n      const n = imgData.length / 4;\n      return `${Math.round(r / n)}-${Math.round(g / n)}-${Math.round(b / n)}`;\n    }\n    // Live video display (no lag)\n    const displayFrame = () => {\n      if (stopped || !videoRef.current) return;\n      // Just keep the video playing, no need to draw to canvas for display\n      requestAnimationFrame(displayFrame);\n    };\n    // Prediction throttled\n    const predictFrame = async () => {\n      if (stopped || !videoRef.current) return;\n      const now = Date.now();\n      if (now - lastPredictTime < 400) {\n        setTimeout(predictFrame, 100); // check again soon\n        return;\n      }\n      lastPredictTime = now;\n      const video = videoRef.current;\n      if (video.readyState < 2) {\n        setTimeout(predictFrame, 100);\n        return;\n      }\n      const canvas = document.createElement('canvas');\n      canvas.width = video.videoWidth || 224;\n      canvas.height = video.videoHeight || 224;\n      const ctx = canvas.getContext('2d');\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n      const frameHash = getFrameHash(ctx, canvas.width, canvas.height);\n      if (lastFrameHashes.includes(frameHash)) {\n        setTimeout(predictFrame, 100);\n        return;\n      }\n      lastFrameHashes.push(frameHash);\n      if (lastFrameHashes.length > 3) lastFrameHashes.shift();\n      const dataUrl = canvas.toDataURL('image/jpeg');\n      const base64 = dataUrl.split(',')[1];\n      try {\n        // --- OpenAI API integration placeholder ---\n        // For security, call OpenAI API from backend, not frontend.\n        // Here, we just send to /predict_product as before.\n        const res = await fetch(`${API_URL}/predict_product`, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ cart_id: cartId, image_base64: base64, use_openai: true }) // pass flag to backend\n        });\n        const data = await res.json();\n        if (data && typeof data.confidence !== 'undefined' && data.product_name) {\n          setLastDetection(data);\n          if (\n            data.product_name !== 'Unknown or Not Recognized' &&\n            typeof data.confidence === 'number' &&\n            data.confidence >= 0.85\n          ) {\n            if (\n              lastAddedProduct.id !== data.product_id ||\n              lastAddedProduct.confidence < 0.85\n            ) {\n              const price = Math.floor(Math.random() * 100) + 1;\n              addItem({\n                id: data.product_id,\n                name: data.product_name,\n                price,\n                confidence: data.confidence\n              });\n              setLastAddedProduct({ id: data.product_id, confidence: data.confidence });\n              toast.success(`Added to cart: ${data.product_name} (₹${price})`);\n            }\n          } else {\n            if (\n              lastAddedProduct.id === data.product_id &&\n              data.confidence < 0.85\n            ) {\n              setLastAddedProduct({ id: null, confidence: 0 });\n            }\n          }\n        }\n      } catch (e) {\n        // ignore\n      }\n      setTimeout(predictFrame, 100); // keep predicting\n    };\n    requestAnimationFrame(displayFrame);\n    setTimeout(predictFrame, 0);\n    return () => { stopped = true; };\n  }, [useWebcam, cartId, addItem, lastAddedProduct]);\n\n  // --- ESP32 polling logic ---\n  useEffect(() => {\n    if (useWebcam) return;\n    let lastImageUrl = null;\n    let lastConnected = false;\n    const fetchImage = () => {\n      fetch(`${API_URL}/latest_image?_t=${Date.now()}`)\n        .then(res => {\n          if (!res.ok) throw new Error('No image');\n          if (!lastConnected) {\n            setIsConnected(true);\n            lastConnected = true;\n          }\n          return res.blob();\n        })\n        .then(blob => {\n          if (imageRef.current) {\n            if (lastImageUrl) URL.revokeObjectURL(lastImageUrl);\n            lastImageUrl = URL.createObjectURL(blob);\n            imageRef.current.src = lastImageUrl;\n          }\n        })\n        .catch(() => {\n          if (imageRef.current) imageRef.current.src = '';\n          if (lastConnected) {\n            setIsConnected(false);\n            lastConnected = false;\n          }\n        });\n    };\n    fetchImage();\n    const interval = setInterval(fetchImage, 200);\n    return () => {\n      clearInterval(interval);\n      if (lastImageUrl) URL.revokeObjectURL(lastImageUrl);\n    };\n  }, [useWebcam]);\n\n  useEffect(() => {\n    if (useWebcam) return;\n    const fetchPrediction = () => {\n      fetch(`${API_URL}/latest_prediction`)\n        .then(res => res.json())\n        .then(data => {\n          if (data && typeof data.confidence !== 'undefined' && data.product_name) {\n            setLastDetection(data);\n            if (\n              data.product_name !== 'Unknown or Not Recognized' &&\n              typeof data.confidence === 'number' &&\n              data.confidence >= 0.85\n            ) {\n              if (\n                lastAddedProduct.id !== data.product_id ||\n                lastAddedProduct.confidence < 0.85\n              ) {\n                const price = Math.floor(Math.random() * 100) + 1;\n                addItem({\n                  id: data.product_id,\n                  name: data.product_name,\n                  price,\n                  confidence: data.confidence\n                });\n                setLastAddedProduct({ id: data.product_id, confidence: data.confidence });\n                toast.success(`Added to cart: ${data.product_name} (₹${price})`);\n              }\n            } else {\n              if (\n                lastAddedProduct.id === data.product_id &&\n                data.confidence < 0.85\n              ) {\n                setLastAddedProduct({ id: null, confidence: 0 });\n              }\n            }\n          }\n        })\n        .catch(() => {});\n    };\n    fetchPrediction();\n    const interval = setInterval(fetchPrediction, 1000);\n    return () => clearInterval(interval);\n  }, [cartId, addItem, lastAddedProduct, useWebcam]);\n\n  return (\n    <div className=\"bg-white p-4 rounded-lg shadow\">\n      <div className=\"mb-4\">\n        <h2 className=\"text-xl font-semibold mb-2\">Camera Feed</h2>\n        <div className=\"flex items-center space-x-2 mb-2\">\n          <div\n            className={`w-3 h-3 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`}\n          />\n          <span className=\"text-sm text-gray-600\">\n            {isConnected ? 'Connected' : 'Disconnected'}\n          </span>\n        </div>\n        <div className=\"mb-2\">\n          <button\n            className={`px-3 py-1 rounded mr-2 ${!useWebcam ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}\n            onClick={() => setUseWebcam(false)}\n          >\n            ESP32 Camera\n          </button>\n          <button\n            className={`px-3 py-1 rounded ${useWebcam ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}\n            onClick={() => setUseWebcam(true)}\n          >\n            Webcam / Mobile Camera\n          </button>\n        </div>\n      </div>\n      {lastDetection && (\n        <div className=\"p-3 bg-blue-50 rounded-lg \">\n          <h3 className=\"font-medium mb-1\">Last Prediction</h3>\n          <div className=\"text-sm text-gray-600\">\n            <p>Product: {lastDetection.product_name || 'N/A'}</p>\n            <p>\n              Confidence: {typeof lastDetection.confidence === 'number' && !isNaN(lastDetection.confidence)\n                ? (lastDetection.confidence * 100).toFixed(1) + '%'\n                : 'N/A'}\n            </p>\n          </div>\n        </div>\n      )}\n      <div className=\"relative aspect-video mx-auto bg-gray-100 rounded-lg overflow-hidden mt-4 w-full max-w-2xl\">\n        {!useWebcam ? (\n          <img\n            ref={imageRef}\n            alt=\"Camera feed\"\n            className=\"w-full h-full object-cover\"\n          />\n        ) : (\n          <video\n            ref={videoRef}\n            autoPlay\n            playsInline\n            className=\"w-full h-full object-cover\"\n          />\n        )}\n        {!isConnected && !useWebcam && (\n          <div className=\"absolute inset-0 flex items-center justify-center bg-gray-900 bg-opacity-50 text-white\">\n            Connecting to camera...\n          </div>\n        )}\n      </div>\n\n      \n    </div>\n  );\n};\n\nexport default CameraFeed;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}