{"ast":null,"code":"import create from 'zustand';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nexport const useAuthStore = create(set => ({\n  token: localStorage.getItem('token'),\n  user: localStorage.getItem('token') ? jwtDecode(localStorage.getItem('token')) : null,\n  isAuthenticated: !!localStorage.getItem('token'),\n  isLoading: false,\n  error: null,\n  login: async (email, password) => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await axios.post(`${API_URL}/auth/login`, {\n        email,\n        password\n      });\n      const {\n        token\n      } = response.data;\n      localStorage.setItem('token', token);\n      const user = jwtDecode(token);\n      set({\n        token,\n        user,\n        isAuthenticated: true,\n        isLoading: false\n      });\n      return true;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      set({\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed',\n        isLoading: false\n      });\n      return false;\n    }\n  },\n  register: async userData => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await axios.post(`${API_URL}/auth/register`, userData);\n      const {\n        token\n      } = response.data;\n      localStorage.setItem('token', token);\n      const user = jwtDecode(token);\n      set({\n        token,\n        user,\n        isAuthenticated: true,\n        isLoading: false\n      });\n      return true;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      set({\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed',\n        isLoading: false\n      });\n      return false;\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    set({\n      token: null,\n      user: null,\n      isAuthenticated: false\n    });\n  },\n  updateProfile: async userData => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await axios.put(`${API_URL}/user/profile`, userData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const {\n        user\n      } = response.data;\n      set({\n        user,\n        isLoading: false\n      });\n      return true;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      set({\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Profile update failed',\n        isLoading: false\n      });\n      return false;\n    }\n  },\n  clearError: () => set({\n    error: null\n  })\n}));","map":{"version":3,"names":["create","axios","jwtDecode","API_URL","process","env","REACT_APP_API_URL","useAuthStore","set","token","localStorage","getItem","user","isAuthenticated","isLoading","error","login","email","password","response","post","data","setItem","_error$response","_error$response$data","message","register","userData","_error$response2","_error$response2$data","logout","removeItem","updateProfile","put","headers","Authorization","_error$response3","_error$response3$data","clearError"],"sources":["C:/Users/akash/Desktop/MODEL/SmartCart/frontend/src/stores/authStore.js"],"sourcesContent":["import create from 'zustand';\r\nimport axios from 'axios';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\nexport const useAuthStore = create((set) => ({\r\n  token: localStorage.getItem('token'),\r\n  user: localStorage.getItem('token') ? jwtDecode(localStorage.getItem('token')) : null,\r\n  isAuthenticated: !!localStorage.getItem('token'),\r\n  isLoading: false,\r\n  error: null,\r\n\r\n  login: async (email, password) => {\r\n    set({ isLoading: true, error: null });\r\n    try {\r\n      const response = await axios.post(`${API_URL}/auth/login`, { email, password });\r\n      const { token } = response.data;\r\n      localStorage.setItem('token', token);\r\n      const user = jwtDecode(token);\r\n      set({ token, user, isAuthenticated: true, isLoading: false });\r\n      return true;\r\n    } catch (error) {\r\n      set({ \r\n        error: error.response?.data?.message || 'Login failed', \r\n        isLoading: false \r\n      });\r\n      return false;\r\n    }\r\n  },\r\n\r\n  register: async (userData) => {\r\n    set({ isLoading: true, error: null });\r\n    try {\r\n      const response = await axios.post(`${API_URL}/auth/register`, userData);\r\n      const { token } = response.data;\r\n      localStorage.setItem('token', token);\r\n      const user = jwtDecode(token);\r\n      set({ token, user, isAuthenticated: true, isLoading: false });\r\n      return true;\r\n    } catch (error) {\r\n      set({ \r\n        error: error.response?.data?.message || 'Registration failed', \r\n        isLoading: false \r\n      });\r\n      return false;\r\n    }\r\n  },\r\n\r\n  logout: () => {\r\n    localStorage.removeItem('token');\r\n    set({ token: null, user: null, isAuthenticated: false });\r\n  },\r\n\r\n  updateProfile: async (userData) => {\r\n    set({ isLoading: true, error: null });\r\n    try {\r\n      const response = await axios.put(\r\n        `${API_URL}/user/profile`,\r\n        userData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        }\r\n      );\r\n      const { user } = response.data;\r\n      set({ user, isLoading: false });\r\n      return true;\r\n    } catch (error) {\r\n      set({ \r\n        error: error.response?.data?.message || 'Profile update failed', \r\n        isLoading: false \r\n      });\r\n      return false;\r\n    }\r\n  },\r\n\r\n  clearError: () => set({ error: null })\r\n})); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}