{"ast":null,"code":"import { create } from 'zustand';\nimport axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nexport const useAuthStore = create(set => ({\n  user: null,\n  isAuthenticated: false,\n  token: localStorage.getItem('token'),\n  login: async (email, password, loginType = 'user') => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/${loginType}/login`, {\n        email,\n        password\n      });\n      const {\n        access_token,\n        user\n      } = response.data;\n\n      // Verify user role matches login type\n      if (loginType === 'admin' && user.role !== 'admin' || loginType === 'user' && user.role === 'admin') {\n        return {\n          success: false,\n          error: `Invalid credentials for ${loginType} login`\n        };\n      }\n      localStorage.setItem('token', access_token);\n      set({\n        user,\n        token: access_token,\n        isAuthenticated: true\n      });\n\n      // Set default Authorization header for all future requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || `${loginType === 'admin' ? 'Admin login' : 'Login'} failed`\n      };\n    }\n  },\n  register: async (email, password) => {\n    try {\n      await axios.post(`${API_URL}/auth/register`, {\n        email,\n        password\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed'\n      };\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n    set({\n      user: null,\n      token: null,\n      isAuthenticated: false\n    });\n  },\n  loadUser: async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      return;\n    }\n    try {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      const response = await axios.get(`${API_URL}/auth/me`);\n      set({\n        user: response.data,\n        isAuthenticated: true,\n        token\n      });\n    } catch (error) {\n      localStorage.removeItem('token');\n      delete axios.defaults.headers.common['Authorization'];\n      set({\n        user: null,\n        token: null,\n        isAuthenticated: false\n      });\n    }\n  }\n}));","map":{"version":3,"names":["create","axios","API_URL","process","env","REACT_APP_API_URL","useAuthStore","set","user","isAuthenticated","token","localStorage","getItem","login","email","password","loginType","response","post","access_token","data","role","success","error","setItem","defaults","headers","common","_error$response","_error$response$data","register","_error$response2","_error$response2$data","logout","removeItem","loadUser","get"],"sources":["C:/Users/akash/Desktop/MODEL/frontend/src/stores/authStore.js"],"sourcesContent":["import { create } from 'zustand';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nexport const useAuthStore = create((set) => ({\r\n  user: null,\r\n  isAuthenticated: false,\r\n  token: localStorage.getItem('token'),\r\n  \r\n  login: async (email, password, loginType = 'user') => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/auth/${loginType}/login`, {\r\n        email,\r\n        password\r\n      });\r\n      \r\n      const { access_token, user } = response.data;\r\n      \r\n      // Verify user role matches login type\r\n      if ((loginType === 'admin' && user.role !== 'admin') || \r\n          (loginType === 'user' && user.role === 'admin')) {\r\n        return {\r\n          success: false,\r\n          error: `Invalid credentials for ${loginType} login`\r\n        };\r\n      }\r\n      \r\n      localStorage.setItem('token', access_token);\r\n      \r\n      set({\r\n        user,\r\n        token: access_token,\r\n        isAuthenticated: true\r\n      });\r\n      \r\n      // Set default Authorization header for all future requests\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.error || `${loginType === 'admin' ? 'Admin login' : 'Login'} failed`\r\n      };\r\n    }\r\n  },\r\n  \r\n  register: async (email, password) => {\r\n    try {\r\n      await axios.post(`${API_URL}/auth/register`, {\r\n        email,\r\n        password\r\n      });\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.error || 'Registration failed'\r\n      };\r\n    }\r\n  },\r\n  \r\n  logout: () => {\r\n    localStorage.removeItem('token');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    \r\n    set({\r\n      user: null,\r\n      token: null,\r\n      isAuthenticated: false\r\n    });\r\n  },\r\n  \r\n  loadUser: async () => {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    if (!token) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      const response = await axios.get(`${API_URL}/auth/me`);\r\n      \r\n      set({\r\n        user: response.data,\r\n        isAuthenticated: true,\r\n        token\r\n      });\r\n    } catch (error) {\r\n      localStorage.removeItem('token');\r\n      delete axios.defaults.headers.common['Authorization'];\r\n      \r\n      set({\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false\r\n      });\r\n    }\r\n  }\r\n})); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}